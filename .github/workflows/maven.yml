# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: saveIt_backend CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn clean install

      - uses: actions/checkout@v2
        with:
          repository: aws/aws-cli
          path: aws-cli
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
        env:
          AWS_DEFAULT_REGION: 'eu-west-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: AWS S3 Upload
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws s3 ls
          pwd
          ls -a
          aws s3 cp "target/helloworld-0.0.1-SNAPSHOT.jar" s3://springboot-helloworld/
        env:
          AWS_DEFAULT_REGION: 'eu-west-1'

      - name: Copy JAR file to EC2
        uses: appleboy/scp-action@master
        with:
          host:  ${{ secrets.ELASTIC_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'target/helloworld-0.0.1-SNAPSHOT.jar'
          target: '/home/ec2-user/helloworld-0.0.1-SNAPSHOT.jar'

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host:  ${{ secrets.ELASTIC_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Java process started."
            ls target
            nohup java -jar target/helloworld-0.0.1-SNAPSHOT.jar > output.log>&1 &
            echo "Java process started."

