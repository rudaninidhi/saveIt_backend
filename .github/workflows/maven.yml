# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: saveIt_backend CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install

      - uses: actions/checkout@v2
        with:
          repository: aws/aws-cli
          path: aws-cli
      - name: Install AWS CLI
        run: |
          choco install awscli

      - name: AWS S3 Upload
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws s3 cp "D:\a\saveIt_backend\saveIt_backend\target\helloworld-0.0.1-SNAPSHOT.jar" s3://springboot-helloworld/
        env:
          AWS_DEFAULT_REGION: 'eu-west-1'

      - name: Connect to EC2 Instance
        uses: actions/setup-checkout@v2
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          port: 5985
          username: terraform-admin
          password: ${{ secrets.EC2_WINRM_PASSWORD }}
          scheme: http
          validate: false




      #      - name: Deploy to EC2 instance
#        run: |
#          aws ec2 send-command --instance-id  ${{ secrets.EC2_HOST }} --document-name "RunCommand" --command "ls /" --output text
#      - name: Set up SSH key
#        run: |
#          Add-Content -Path $env:USERPROFILE\.ssh\id_rsa -Value $env:SSH_PRIVATE_KEY
#          ssh-keyscan -H ${{secrets.EC2_HOST}} >> $env:USERPROFILE\.ssh\known_hosts
#          ls
      # - name: Copy files to EC2
      #   run: |
      #     scp -i $env:USERPROFILE\.ssh\id_rsa -r  ec2-user@$env:EC2_INSTANCE_IP:/path/to/remote/app
